#!/usr/bin/perl
#
# Connect to IP500 SMDR connector then log the
# calls to text files and SQL database.
#
use DBI;
use strict;
use warnings;
use IO::Socket;
use POSIX;
my $host = shift || $ARGV[0];
my $port = shift || $ARGV[1];
my $proto = getprotobyname('tcp');
my $iaddr = inet_aton($host);
my $paddr = sockaddr_in($port, $iaddr);

for(;;){

  my $sock = new IO::Socket::INET(PeerAddr => $host, PeerPort => $port,Proto => "tcp",)
  or die "Cannot connect to PBX at address: $host port: $port: $!";

  while (<$sock>) {
    s/^\0+//; # Remove leading null characters
    print $_;
    chomp ($_);
    #$_ =~ s/^[^ ]+//;
    if ($_ =~m"/") {
      &TXTout; #send data to CSV TXT subroutine
      &DBconnect; #send data to the database subroutine
    }
  }

  sub TXTout {
    my $dir = "/var/log/smdr-logger/";
    my $filename = strftime("%Y%m%d",localtime(time));
    my $fileexpression = $dir.$filename.".csv";

    open (my $fh, '>>:crlf', $fileexpression) or die "Cannot create file in $dir";
    print $fh $_;
    close $fh;
  }

  sub DBconnect {
    my @cdr = split ',', $_;
    my $driver = "mysql";
    my $database = "avaya";
    my $dsn = "DBI:$driver:database=$database";
    my $userid = "smdr";
    my $password = "Dm632541";

    my $callstart = $cdr[0];
    my $connectedtime = $cdr[1];
    my $ringtime = $cdr[2];
    my $caller = $cdr[3];
    my $direction = $cdr[4];
    my $callednumber = $cdr[5];
    my $diallednumber = $cdr[6];
    my $account = $cdr[7];
    my $isinternal = $cdr[8];
    my $callid = $cdr[9];
    my $continuation = $cdr[10];
    my $party1device = $cdr[11];
    my $party1name = $cdr[12];
    my $party2device = $cdr[13];
    my $party2name = $cdr[14];
    my $holdtime = $cdr[15];
    my $parktime = $cdr[16];
    my $authvalid = $cdr[17];
    my $authcode = $cdr[18];
    my $usercharged = $cdr[19];
    my $callcharge = $cdr[20];
    my $currency = $cdr[21];
    my $amountatlastuserchange = $cdr[22];
    my $callunits = $cdr[23];
    my $unitsatlastuserchange = $cdr[24];
    my $costperunit = $cdr[25];
    my $markup = $cdr[26];
    my $externaltargetingcause = $cdr[27];
    my $externaltargeterid = $cdr[28];
    my $externaltargetednumber = $cdr[29];
    

    my $dbh = DBI->connect($dsn, $userid, $password) or die $DBI::errstr;
    my $sth = $dbh->prepare("INSERT INTO smdr
    (CallStart,ConnectedTime,RingTime,Caller,Direction,CalledNumber,DialledNumber,Account,IsInternal,CallID,Continuation,Party1Device,Party1Name,Party2Device,Party2Name,HoldTime,ParkTime,AuthValid,AuthCode,UserCharged,CallCharge,Currency,AmountatLastUserChange,CallUnits,UnitsatLastUserChange,CostperUnit,MarkUp,ExternalTargetingCause,ExternalTargeterId,ExternalTargetedNumber)
    VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

    $sth->execute($callstart,$connectedtime,$ringtime,$caller,$direction,$callednumber,$diallednumber,$account,$isinternal,$callid,$continuation,$party1device,$party1name,$party2device,$party2name,$holdtime,$parktime,$authvalid,$authcode,$usercharged,$callcharge,$currency,$amountatlastuserchange,$callunits,$unitsatlastuserchange,$costperunit,$markup,$externaltargetingcause,$externaltargeterid,$externaltargetednumber) or die $DBI::errstr;
    $sth->finish();
    #$dbh->commit or die $DBI::errstr;
    $dbh->disconnect or warn $dbh->errstr;
  } 

  close $sock or die "close: $!";
  print "socket closed";
  print "<br />";
}
